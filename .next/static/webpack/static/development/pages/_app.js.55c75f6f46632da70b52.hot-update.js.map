{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.55c75f6f46632da70b52.hot-update.js","sources":["webpack:///./pages/_app.tsx"],"sourcesContent":["// import App from './../app'\r\n// import * as React from 'react'\r\n// import store from './../store/index'\r\n// import Head from 'next/head'\r\n// import './../style/index.less'\r\n// import Nav from './../components/Nav'\r\n// import { isBrowser } from './../utils/utils'\r\n// import { initPageMode } from './../utils/utils'\r\n// import { observer } from 'mobx-react';\r\n\r\n// isBrowser() && store.colorStore.initSelfColor()\r\n\r\n// // // 初始化页面主题\r\n// isBrowser() && initPageMode()\r\n\r\n// @observer\r\n// export default class Index extends React.Component {\r\n//   render () {\r\n//     // const { store } = this.props\r\n//     console.log(this.props)\r\n//     return (\r\n//       <div>\r\n//         <Head>\r\n//           <title>个人网站</title>\r\n//           <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" key=\"viewport\" />\r\n//         </Head>\r\n//         <div>\r\n//           <Nav/>\r\n//         </div>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\nimport { observer } from 'mobx-react';\r\nimport App, {Container} from 'next/app'\r\nimport * as React from 'react'\r\nimport Nav from './../components/Nav'\r\nimport store, {initializeStore} from './../store/index'\r\nimport { Provider } from 'mobx-react'\r\nimport { isBrowser, initPageMode } from './../utils/utils'\r\n\r\ninterface IappContext {\r\n  Component: any;\r\n  ctx: any;\r\n  router: any;\r\n}\r\n\r\ninterface AppProps {}\r\n\r\ninterface AppState {\r\n  mode?: string\r\n}\r\n\r\n@observer\r\nexport default class MyApp extends App<AppProps, AppState> {\r\n  static async getInitialProps (appContext: IappContext) {\r\n    let pageProps = {}\r\n    let mode = {}\r\n    if (appContext.Component.getInitialProps) {\r\n      pageProps = await appContext.Component.getInitialProps(appContext.ctx)\r\n    }\r\n    return {pageProps, mode}\r\n  }\r\n\r\n  mode!: string;\r\n\r\n  constructor (props: any) {\r\n    super(props)\r\n    this.mode = isBrowser() && initPageMode()\r\n  }\r\n\r\n  componentDidMount () {\r\n    alert(this.mode)\r\n  }\r\n\r\n  render () {\r\n    const {Component, pageProps} = this.props\r\n    // const { mode } = this.state\r\n    console.log('_app.this.mode', this.mode)\r\n    return (\r\n      <Container>\r\n        <div id=\"dw-theme-container\" className={this.mode}>\r\n          <Nav {...store}></Nav>\r\n          <Provider {...store}>\r\n            <Component {...pageProps} {...store}/>\r\n          </Provider>\r\n        </div>\r\n      </Container>\r\n    )\r\n  }\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;;;AAcA;;;;;;;;;AACA;;;;;;AACA;AACA;AACA;AAAA;;;;;;AACA;AACA;;AADA;AACA;;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAIA;AAAA;AACA;AADA;AACA;AADA;AAEA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;AAnCA;AACA;;;;;A","sourceRoot":""}